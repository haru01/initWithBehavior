# 第二章:BrowseGithuhbの仕様と設計

この章では、BrowseGithubの仕様とおおまかな設計、設計が依存するGithubAPIについて解説します。
実際にコードを書き始める前に、アプリケーションとしての仕様を決めなければいけません。
これから書いて行くコードは、ここにある仕様を実現するためのものです。
またBDDによってテストコードを書きながらアプリケーションを設計していくことが可能ですが、
ある程度大まかな方針を決めなければ、統一感のないコードとなってしまいます。

## BrowseGithubの仕様
BrowseGithubは名前の通りGithubを閲覧するためのiOSアプリです。
このドキュメントでは、すべての機能についての説明は行わないため、必要なものだけを抜きだしています。

* OAuthを利用したログインができる
* 最初にユーザーにOAuthを促すビューを表示する
* OAuthが完了したら、ログインユーザーの情報を取得し、ユーザーのNewsFeedを取得して表示する
* すでにOAtuhが完了している状態では、最初からユーザーのNewsFeedを表示する
* ナビゲーションバーの左上に隠しメニューのボタンを配置する、タップすると隠しメニューが現れる
* メニューには、NewsFeedとYourRepositories、そしてブックマークしたリポジトリの一覧が表示される
* YourReposiriesを選択すると、自分が管理しているリポジトリの一覧が表示される
* リポジトリの一覧からリポジトリを選択すると、選択されたリポジトリの詳しい情報が表示される
* リポジトリの詳しい情報から、READMEをWebViewで表示できる

軽く挙てみましたが、かなりたくさんの機能があるように思えます。

## おおまかな設計

* BGResource
  * GithubAPIからデータを取得できるものの継承先で、APIにアクセスしてレスポンスをパースする機能を持つ
  * BGXXXX
    * 基本となるモデルオブジェクト、自身の情報をAPIから取得でき、パースするクラス
  * BGXXXXs
    * 対象のモデルをリストで取得し、パースするためのクラス
* BGXXXXManager
  * コントーラーからの要求を受けて、GithubAPIからのデータ取得の舵や、リストの管理を行うクラス
* BGXXXXController
  * いわゆるViewControllerですが、個人的な好みでViewの部分を省略しています

* その他
  * APIから取得されるが、単体で取得する必要のない、もしくはできないモデルクラス
  * 基本的な仕組みの方に当てはまらない特定の振る舞いのみをするクラス、例えばOAuthの為のクラスや、メッセージを整形するためのクラス。

